= simple_form_for([:admin, model]) do |f|
  = f.error_notification

  .form-inputs
    = f.association :category, collection: Category.order_by_name
    = concept('admin/publisher/cell/uncategorized_links', nil, form: f, name: :publisher_id)
    = f.input :order
    = f.input :url_matcher, input_html: { rows: 1, cols: 100 }, hint: 'regexp'
    = f.input :html_matcher, input_html: { rows: 1, cols: 100 }, hint: 'regexp'
    = f.input :html_matcher_selector, input_html: { rows: 1, cols: 100 }, hint: 'xpath or css'
    = f.input :try_out, as: :boolean

  .form-actions
    = f.button :submit
    = link_to 'Delete', [:admin, model], data: { confirm: 'Are you sure?' }, method: :delete

  br

  .category-matchers-links
    strong Matching links (#{ matching_links_count })
    - if matching_links.present?
      = concept('admin/category_matcher/cell/links', nil, links: matching_links)
    - else
      p No links matching

  br

  .category-matchers-links
    strong Uncategorized links (#{ uncategorized_links_count.html_safe })
    - if uncategorized_links.present?
      = concept('admin/category_matcher/cell/links', nil, links: uncategorized_links)
    - else
      p No uncategorized links
